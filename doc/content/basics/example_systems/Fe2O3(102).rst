.. _example_Fe2O3:

Hematite (012)-(1×1)
====================

Hematite (:math:`\alpha \text{-Fe}_2\text{O}_3`) is the one of them most common
naturally occurring iron oxides. Its surfaces are popular model
systems for (single-atom) catalysis
:cite:p:`kraushoferAtomicscaleStructureHematite2018,franceschiModelSystemPhotocatalysis2020`,
photocatalysis and the study of mineral-water interfaces.

The :math:`(1\bar{1}02)` surface (also referred to as :math:`(012)`, or r-cut)
exhibits two stable terminations under :term:`UHV` conditions: a stoichiometric
(1×1) bulk-truncated termination, and a reduced (2×1) reconstruction
:cite:p:`kraushoferAtomicscaleStructureHematite2018`.
Here we use the bulk-truncated (1×1) surface as an example system of a "medium
complexity" oxide surface and will compare experimental LEED :math:`I(V)` data data [#]_ 
with a theory calculation in ViPErLEED.

All input files needed to follow along on your own machine can be found
:download:`here</_static/example_systems/Fe2O3-(1x1)/input_files.zip>`.

.. tip:: 
   If you are new to ViPErLEED, check out :ref:`this tutorial<example_ag_100>`
   first, which explains how to set up a calculation in more detail.

Introduction
============

To set up the calculation, we need to start from a structure model of the (1×1)
surface in the POSCAR format. We can easily build this ourselves from a
(:math:`\alpha \text{-Fe}_2\text{O}_3`) bulk structure.
For this example, we use the structure by
:cite:t:`maslenSynchrotronXrayStudy1994`, which can be found on the
`Crystallography Open Database (entry 2101167) <http://www.crystallography.net/cod/2101167.html>`_.

.. warning:: 
    Bulk structures can be found in various online databases, but you should be
    careful to choose a model with the correct **experimental** lattice
    parameters (as determined by :term:`XRD`).
    Lattice parameters from e.g. :term:`DFT` calculations may be off by ~1%,
    which will strongly affect the R-factor.
    Lattice parameters are not accessible in the
    :ref:`tensor LEED approximation<tensor_leed>`, but they can be optimized in
    a :ref:`full-dynamic optimization<fdoptimization>`.

To go from the rhombohedral bulk unit cell to the unit cell for the
:math:`(1\bar{1}02)` (r-cut) surface, we need to apply a suitable change of
basis:

.. math::
    (a', b', c') = (a,b,c) P

    P  = \frac{1}{3} \begin{pmatrix}
                        3 & 1  & 2 \\
                        0 & 2  & 4 \\
                        0 & -1 & 1
                     \end{pmatrix}

To create a suitable surface slab (as expected by ViPErLEED), we can then
replicate the unit cell along :math:`\vec{c}` and (optionally) remove the
topmost layer to create a vacuum interface.

The our starting POSCAR file contains 40 atoms in total, which corresponds to
4 repeat units (layers) of 4 Fe and 6 O atoms each.


PARAMETERS
==========

As in pervious examples, we begin with a simple
:ref:`PARAMETERS file<parameters>`:

.. literalinclude :: /_static/example_systems/Fe(012)-(1x1)/PARAMETERS
   :language: console
   :caption: PARAMETERS

The options concerning global parameters and the :ref:`VIBROCC file<viboccin>`
have been discussed in detail elsewhere (see e.g. :ref:`here<example_ag_100>`).
Note, however, the parameters concerning the structure interpretation.
To let ViPErLEED know what we consider the bulk structure, we need to define the
parameters :ref:`BULK_REPEAT`, :ref:`LAYER_CUTS` and :ref:`N_BULK_LAYERS`.
Alternatively, we could also specify the parameter :ref:`BULK_LIKE_BELOW` with a
suitable value (for the given POSCAR file 0.35 would work).

We then use the :ref:`SITE_DEF<sitedef>` parameter to define which sites should
be treated separately by ViPErLEED.
In this case, we declare two ``surface`` sites each for iron and oxygen. This
will assign the two topmost atoms of each species to the surface, and treat them
as different sites in the calculation.
They will thus be assigned different electron-atom scattering phaseshifts (see
file :ref:`PHASESHIFTS`) and different vibrational amplitudes.

We can now run the initialization to check if all input files are interpreted
correctly.
If so, the :ref:`log<log_files_tleedm>` should look similar to this:

.. literalinclude :: /_static/example_systems/Fe(012)-(1x1)/log_init.txt
   :language: console
   :caption: PARAMETERS

DISPLACEMENTS
=============

We can now set up a :ref:`DISPLACEMENTS file<displacements>`:

Full-dynamic Optimization
=========================


.. [#] The data was obtained by Alexander M. Imre and Michele Riva, with further
support provided by Florian Kraushofer, Giada Franceschi, Tilman Kißlinger and
Lutz Hammer.

**TODO** add ORCID?

**TODO** refer to the ViPErLEED paper
