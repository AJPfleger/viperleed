.. _example_Ir_O:

=========================
Example System: Ir(100)-O
=========================

In this tutorial, we go through a ViPErLEED structure analysis for an Ir(100) surface with adsorbed oxygen, creating a (:math:`2\times1`) reconstruction.
The structure and analysis is based on the paper by **TODO** and the experimental data was provided courtesy of Lutz Hammer .

We will begin by running a reference calculation and a rough structure-optimization.
Following this, we move to a finer search grid and run a :ref:`full-dynamic optimization <fdoptimization>` of the inner potential :math:`V_{0\text{i}}`.
Finally, once we achive a satisfactory R-factor, we will use the ViPErLEED :ref:`error calculation<error_calculation>` to estimate...

.. tip:: 
   If you are new to ViPErLEED, check out :ref:`this<example_ag_100>` tutorial first, which explains the setup in more detail.

Introduction
============

We start from experimental LEED-:math:`I(V)` curves which are saved in the file :ref:`EXPBEAMS.csv<expbeams>`.
As reference structure, we use a :ref:`POSCAR file<poscar>`, containing a hand-made Ir(100) surface, which we hand made from a bulk structure with an additional adsorbed Oxygen atom placed on top.


PARAMETERS and rough DISPLACEMENTS
==================================

We start by setting up a rudimentary :ref:`PARAMETERS file<parameters>`, very similar to the one described in the tutorial for the :ref:`Ag(100)-(1x1) surface<example_ag_100>`:

.. literalinclude :: /_static/example_systems/Ir(100)-O/PARAMETERS
   :language: console
   :caption: PARAMETERS

GLOBAL PARAMETERS
    At the top of the file, we specify some general settings, such as the energy range to be used and our initial guess for the imaginary part of the inner potential :math:`V_{0\text{i}}`
    We will run a :ref:`reference calculation<ref-calc>`, :ref:`delta-amplitude<sec_deltas>`, and a :ref:`structure search<sec_search>` back-to-back, so we specify :ref:`RUN = 1-3<run>`.

    To reduce computation time for this example, we also limit the maximum angular momentum qunatum number to be used in the calculations by TensErLEED with the :ref:`LMAX<lmax>` parameter.

PARAMETERS FOR INTERPRETING THE POSCAR
    As mentioned above, we let ViPErLEED find the bulk-repeat unit by intself. 
    For this, we set the :ref:`BULK_LIKE_BELOW` parameter at the height where we drew the plane previously.

    Using the :ref:`SITE_DEF<sitedef>` parameter, we specify that the topmost Iridum atom should be treated sperately.
    For completeness, we also specify the site type ``O_ads`` for the adsorbed oxygen atom.
    However, since there is only one Oxygen atom in the structure, this will not change the behaviour and we could also skip that line.

PARAMETERS FOR VIBROCC
    Since we don't have a :ref:`VIBROCC file<viboccin>` yet, we need to specify the parameters :ref:`T_DEBYE<t_debye>`, :ref:`T_EXPERIMENT<t_experiment>`, and :ref:`VIBR_AMP_SCALE<VIBR_AMP_SCALE>`.

.. tip::
    Grouping the settings in the PARAMETERS file as described above is not required, but it helps with readability.


For the delta-amplitudes and structure-optimization, we also need to set up a :ref:`DISPLACEMENTS file<displacements>`.
Since this is the first run starting from a fresh POSCAR we begin with a rather large range and a rather rough grid.

.. literalinclude :: /_static/example_systems/Ir(100)-O/DISPLACEMENTS_rough
   :language: console
   :caption: DISPLACEMENTS

By setting multiple search block in DISPLACEMENTS, we can tell ViPErLEED to execute them one after the other.
When starting to optimize a new system such as here, it is generally a good idea to start with a geometric optimization perpendicular to the surface (:math:`z`). This is because the LEED :math:`I(V)` curves are most sensitive to out-of-plane displacements.
Here, we then follow up with rough optimizations of in-plane positions and vibrational amplitudes.

With the files set up, we can start the ViPErLEED calculation.
During the first initialization ViPErLEED will generate :ref:`IVBEAMS<ivbeams>` and :ref:`PHASESHIFTS<phaseshifts>`.


.. note:: 
    You will notice that the first time we run a new system, ViPErLEED stops execution after the initialization.
    This is on purpose, and is supposed to give the user a chace to double-check the recognized symmetry and annotated POSCAR.


Tensor LEED Error and fine DISPLACEMENTS
========================================

When this first run is finished (takes ~ TODO), we will see in the log file and 

pages of search-report!!

Optimization of inner potential
===============================


.. code-block:: console

    OPTIMIZE V0i = step 0.5

set :ref:`RUN = 5<run>`.


Error calculation
===============================